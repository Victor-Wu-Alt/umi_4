"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = require("fs");
const path_1 = require("path");
const fs_extra_1 = __importDefault(require("../../compiled/fs-extra"));
const Generator_1 = __importDefault(require("../Generator/Generator"));
class BaseGenerator extends Generator_1.default {
    constructor({ path, target, data, questions, baseDir }) {
        super({ baseDir: baseDir || target, args: data });
        this.path = path;
        this.target = target;
        this.data = data;
        this.questions = questions || [];
    }
    prompting() {
        return this.questions;
    }
    async writing() {
        const context = {
            ...this.data,
            ...this.prompts,
        };
        if ((0, fs_1.statSync)(this.path).isDirectory()) {
            this.copyDirectory({
                context,
                path: this.path,
                target: this.target,
            });
        }
        else {
            if (this.path.endsWith('.tpl')) {
                this.copyTpl({
                    templatePath: this.path,
                    target: this.target,
                    context,
                });
            }
            else {
                const absTarget = this.target;
                fs_extra_1.default.mkdirpSync((0, path_1.dirname)(absTarget));
                (0, fs_1.copyFileSync)(this.path, absTarget);
            }
        }
    }
}
exports.default = BaseGenerator;
