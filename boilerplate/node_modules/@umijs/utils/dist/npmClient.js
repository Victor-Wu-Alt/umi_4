"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.installWithNpmClient = exports.getNpmClient = exports.NpmClientEnum = exports.npmClients = void 0;
const fs_1 = require("fs");
const path_1 = require("path");
exports.npmClients = ['pnpm', 'tnpm', 'cnpm', 'yarn', 'npm'];
var NpmClientEnum;
(function (NpmClientEnum) {
    NpmClientEnum["pnpm"] = "pnpm";
    NpmClientEnum["tnpm"] = "tnpm";
    NpmClientEnum["cnpm"] = "cnpm";
    NpmClientEnum["yarn"] = "yarn";
    NpmClientEnum["npm"] = "npm";
})(NpmClientEnum = exports.NpmClientEnum || (exports.NpmClientEnum = {}));
const getNpmClient = (opts) => {
    const chokidarPkg = require('chokidar/package.json');
    if (chokidarPkg.__npminstall_done) {
        return chokidarPkg._resolved.includes('registry.npm.alibaba-inc.com')
            ? 'tnpm'
            : 'cnpm';
    }
    const chokidarPath = require.resolve('chokidar');
    if (chokidarPath.includes('.pnpm') ||
        (0, fs_1.existsSync)((0, path_1.join)(opts.cwd, 'node_modules', '.pnpm'))) {
        return 'pnpm';
    }
    if ((0, fs_1.existsSync)((0, path_1.join)(opts.cwd, 'yarn.lock')) ||
        (0, fs_1.existsSync)((0, path_1.join)(opts.cwd, 'node_modules', '.yarn-integrity'))) {
        return 'yarn';
    }
    return 'npm';
};
exports.getNpmClient = getNpmClient;
const installWithNpmClient = ({ npmClient, cwd, }) => {
    const { sync } = require('../compiled/cross-spawn');
    const npm = sync(npmClient, [npmClient === 'yarn' ? '' : 'install'], {
        stdio: 'inherit',
        cwd,
    });
    if (npm.error) {
        throw npm.error;
    }
};
exports.installWithNpmClient = installWithNpmClient;
