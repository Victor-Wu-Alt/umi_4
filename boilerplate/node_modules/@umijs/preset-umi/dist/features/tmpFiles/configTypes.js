"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const joi_1 = __importDefault(require("@umijs/core/compiled/@hapi/joi"));
// @ts-ignore
const joi2types_1 = __importDefault(require("../../../compiled/joi2types"));
exports.default = (api) => {
    api.onGenerateFiles(async () => {
        const { service } = api;
        const properties = Object.keys(service.configSchemas)
            .map((key) => {
            const schemaFn = service.configSchemas[key];
            if (typeof schemaFn !== 'function')
                return;
            const schema = schemaFn(joi_1.default);
            if (!joi_1.default.isSchema(schema)) {
                return;
            }
            return {
                [key]: schema,
            };
        })
            .reduce((acc, curr) => ({
            ...acc,
            ...curr,
        }), {});
        const interfaceName = 'IConfigFromPlugins';
        const content = await (0, joi2types_1.default)(joi_1.default.object(properties), {
            interfaceName,
            bannerComment: '// Created by Umi Plugin',
        }).catch((err) => {
            api.logger.error('Config types generated error', err);
            return Promise.resolve(`export interface ${interfaceName} {}`);
        });
        api.writeTmpFile({
            noPluginDir: true,
            path: 'core/pluginConfig.d.ts',
            content,
        });
    });
};
