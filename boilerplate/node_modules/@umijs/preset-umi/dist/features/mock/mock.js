"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const watch_1 = require("../../commands/dev/watch");
const createMockMiddleware_1 = require("./createMockMiddleware");
const getMockData_1 = require("./getMockData");
function default_1(api) {
    api.describe({
        key: 'mock',
        config: {
            schema(Joi) {
                return Joi.object().keys({
                    exclude: Joi.array()
                        .items(Joi.string())
                        .description('exclude files not parse mock'),
                    include: Joi.array().items(Joi.string()),
                });
            },
        },
        enableBy() {
            // 只有 dev 才默认开启
            if (api.name !== 'dev') {
                return false;
            }
            // 环境变量关闭 mock
            return process.env.MOCK !== 'none';
        },
    });
    // context for update mockData
    const context = {
        mockData: null,
    };
    api.onStart(() => {
        (0, watch_1.watch)({
            path: `${api.cwd}/mock`,
            addToUnWatches: true,
            onChange: () => {
                context.mockData = (0, getMockData_1.getMockData)({
                    cwd: api.cwd,
                    mockConfig: api.config.mock || {},
                });
            },
        });
    });
    api.addBeforeMiddlewares(async () => {
        context.mockData = (0, getMockData_1.getMockData)({
            cwd: api.cwd,
            mockConfig: api.config.mock || {},
        });
        return [
            (0, createMockMiddleware_1.createMockMiddleware)({
                context,
            }),
        ];
    });
}
exports.default = default_1;
