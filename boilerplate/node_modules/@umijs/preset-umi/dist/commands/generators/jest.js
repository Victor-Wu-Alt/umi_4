"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@umijs/core");
const utils_1 = require("@umijs/utils");
const fs_1 = require("fs");
const path_1 = require("path");
const utils_2 = require("./utils");
exports.default = (api) => {
    api.describe({
        key: 'generator:jest',
    });
    api.registerGenerator({
        key: 'jest',
        name: 'Enable Jest',
        description: 'Setup Jest Configuration',
        type: core_1.GeneratorType.enable,
        checkEnable: () => {
            return (!(0, fs_1.existsSync)((0, path_1.join)(api.paths.cwd, 'jest.config.ts')) &&
                !(0, fs_1.existsSync)((0, path_1.join)(api.paths.cwd, 'jest.config.js')));
        },
        disabledDescription: 'jest has already enabled. You can remove jest.config.{ts,js}, then run this again to re-setup.',
        fn: async () => {
            const h = new utils_2.GeneratorHelper(api);
            const res = await (0, utils_2.promptsExitWhenCancel)({
                type: 'confirm',
                name: 'willUseTLR',
                message: 'Will you use @testing-library/react for UI testing?!',
                initial: true,
            });
            const basicDeps = {
                jest: '^27',
                '@types/jest': '^27',
                // we use `jest.config.ts` so jest needs ts and ts-node
                typescript: '^4',
                'ts-node': '^10',
            };
            const packageToInstall = res.willUseTLR
                ? {
                    ...basicDeps,
                    '@testing-library/react': '^12',
                }
                : basicDeps;
            h.addDevDeps(packageToInstall);
            h.addScript('test', 'jest');
            const importSource = api.appData.umi.importSource;
            (0, fs_1.writeFileSync)((0, path_1.join)(api.cwd, 'jest.config.ts'), `
import { Config, configUmiAlias, createConfig } from '${importSource}/test';

export default async () => {
  return (await configUmiAlias({
    ...createConfig({
      target: 'browser',
    }),
    // if you require some es-module npm package, please uncomment below line and insert your package name
    // transformIgnorePatterns: ['node_modules/(?!.*(lodash-es|your-es-pkg-name)/)']
  })) as Config.InitialOptions;
};
`.trimLeft());
            utils_1.logger.info('Write jest.config.ts');
            h.installDeps();
        },
    });
};
