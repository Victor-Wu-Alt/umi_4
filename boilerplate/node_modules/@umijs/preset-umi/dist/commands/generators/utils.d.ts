import { prompts } from '@umijs/utils';
import { IApi } from '../../types';
export declare function checkStatus({ pkg }: {
    pkg: any;
}): {
    needInstall: boolean;
    needConfigPlugins: boolean;
};
export declare class GeneratorHelper {
    readonly api: IApi;
    private readonly needConfigUmiPlugin;
    private readonly needInstallUmiPlugin;
    constructor(api: IApi);
    setUmirc(key: string, val: any): void;
    appendInternalPlugin(pluginPath: string): void;
    addDevDeps(deps: Record<string, string>): void;
    addScript(name: string, cmd: string): void;
    installDeps(): void;
    ensureVariableWithQuestion<V>(v: V, question: Omit<prompts.PromptObject<'variable'>, 'name'>): Promise<any>;
}
export declare function getUmiJsPlugin(): any;
export declare function promptsExitWhenCancel<T extends string = string>(questions: prompts.PromptObject<T> | Array<prompts.PromptObject<T>>, options?: Pick<prompts.Options, 'onSubmit'>): Promise<prompts.Answers<T>>;
export declare function trim(s?: string): string;
