"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateApiResKV = void 0;
const core_1 = require("@umijs/core");
const utils_1 = require("@umijs/utils");
const path_1 = require("path");
const constants_1 = require("../../constants");
const utils_2 = require("./utils");
exports.default = (api) => {
    api.describe({
        key: 'generator:api',
    });
    api.registerGenerator({
        key: 'api',
        name: 'Generator api',
        description: 'Generate api route boilerplate code',
        type: core_1.GeneratorType.generate,
        async fn(opts) {
            const h = new utils_2.GeneratorHelper(api);
            let [_, ...apiNames] = opts.args._;
            if (apiNames.length === 0) {
                let apiName = await h.ensureVariableWithQuestion(null, {
                    type: 'text',
                    message: 'please input your api name:',
                    initial: 'foo',
                    format: utils_2.trim,
                });
                apiNames = [apiName];
            }
            for (const apiName of apiNames) {
                const apiFileName = `${apiName}.ts`;
                const base = (0, path_1.join)(api.paths.absSrcPath, 'api');
                const target = (0, path_1.join)(base, apiFileName);
                const kv = generateApiResKV(apiName);
                await opts.generateFile({
                    target,
                    path: API_TML,
                    baseDir: api.paths.absSrcPath,
                    data: kv,
                });
            }
        },
    });
};
const API_TML = (0, path_1.join)(constants_1.TEMPLATES_DIR, 'generate/api.ts.tpl');
function generateApiResKV(apiName) {
    const { name, dir } = (0, path_1.parse)(apiName);
    const match = name.match(/^\[\s*(\w+)\s*\]$/);
    const quoteStr = JSON.stringify;
    if (!match) {
        return { key: quoteStr(name), value: quoteStr('is working') };
    }
    const paramName = match[1];
    const { name: itemName } = (0, path_1.parse)(dir);
    const key = itemName
        ? `${itemName}${utils_1.lodash.capitalize(paramName)}`
        : paramName;
    return { key: quoteStr(key), value: `req.params[${quoteStr(paramName)}]` };
}
exports.generateApiResKV = generateApiResKV;
