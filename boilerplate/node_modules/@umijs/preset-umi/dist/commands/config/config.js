"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const list_1 = require("./list");
const remove_1 = require("./remove");
const set_1 = require("./set");
exports.default = (api) => {
    api.registerCommand({
        name: 'config',
        description: 'umi config cli',
        details: `
# umi configs
$ umi config [type] [name] [value]

# List configs
$ umi config list

# Get the specific config
$ umi config list --name history
$ umi config get history

# Set the specific config (only local config) [beta]
$ umi config set history "{type:'hash'}"

# Remove the specific config (only local config) [beta]
$ umi config remove history
$ umi config r history
    `.trim(),
        configResolveMode: 'loose',
        async fn({ args }) {
            const { _, all = false } = args;
            const [command, name, value] = _;
            switch (command) {
                case 'list':
                    (0, list_1.list)(all ? api.config : api.userConfig, args.name || '');
                    break;
                case 'get':
                    (0, list_1.list)(api.config, name);
                    break;
                case 'set':
                    (0, set_1.set)(api, name, value);
                    break;
                case 'remove':
                case 'r':
                    (0, remove_1.remove)(api.appData.mainConfigFile, name);
                    break;
                default:
                    throw new Error(`Unsupported sub command ${command} for umi config.`);
            }
        },
    });
};
